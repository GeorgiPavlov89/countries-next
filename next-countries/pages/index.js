import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import SearchAndDropDown from '../components/SearchAndDropDown'
import dynamic from "next/dynamic"
import { useEffect, useState, useRef, useCallback } from "react"
import Error from "../components/Error"

// export async function getServerSideProps() {
//   const res = await fetch(defaultEndpoint)
//   const data = await res.json()

//   return {
//     props: {
//       data

//     }
//   }
// }



const regions = [
  {
    id: 1,
    value: "Africa"
  },
  {
    id: 2,
    value: "America"
  },
  {
    id: 3,
    value: "Asia"
  },
  {
    id: 4,
    value: "Europe"
  },
  {
    id: 5,
    value: "Oceania"
  },
]

const Header = dynamic(() => import("../components/Header"), { ssr: false })

export default function Home() {
  let API = `https://restcountries.com/v3.1/all`;
  const regionRef = useRef()
  const searchRef = useRef(null)
  const [results, updateResults] = useState([])
  const [search, setSearch] = useState('')
  const [selectRegion, setSelectRegion] = useState('')
  const [isLoading, setLoading] = useState(false)

  const [theme, setTheme] = useState('light')

  console.log(selectRegion)
  function handleSearch() {
    setLoading(true)
    setSearch(searchRef.current.value)
    console.log(search);
  }



  const switchTheme = () => {
    const newTheme = theme === 'light' ? 'dark' : 'light';
    setTheme(newTheme);
  }

  useEffect(() => {
    if (search || selectRegion) {
      API = `https://restcountries.com/v3.1/all?fields=${search},${selectRegion} `
    } else {
      API = `https://restcountries.com/v3.1/all`;
    }
    fetch(API)
      .then((res) => res.json())
      .then((data) => {
        updateResults(data)
        setLoading(false)
      })
  }, [search, selectRegion])
  return (
    <div className={styles.container} data-theme={theme}>
      <Head>
        <title>Rest Countries</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Header
          theme={theme}
          switchTheme={switchTheme}
        />

        <div className={styles.grid}>

          <SearchAndDropDown
            title={selectRegion}
            regions={regions}
            handleSearch={handleSearch}
            searchRef={searchRef}
            regionRef={regionRef}
            setSelectRegion={setSelectRegion}
          />

          {
            results.length > 0 ?
              results.map((item, index) => {
                return (
                  <div key={index} className={styles.card}>
                    <div className={styles.image}>
                      <Image src={item.flags.svg} width="300px" height="200px" layout="responsive" objectFit="cover" alt="country flag" />
                    </div>
                    <div className={styles.cardInfo}>
                      <div className={styles.info}>
                        <h3>{item.name.common}</h3>
                        <p><span> Population:</span> {item.population}</p>
                        <p><span>Region:</span> {item.region}</p>
                        <p><span> Capital:</span> {item.capital}</p>
                      </div>
                    </div>
                  </div>
                )
              })
              : <Error isLoading={isLoading} />
          }

        </div>
      </main>


    </div>
  )
}
